import configtools
import os
import sys
JEC = '{{ jec }}'

def config():
    cfg = configtools.getConfig('mc', {{ year }}, 'mm', JEC=JEC)
    cfg["InputFiles"].set_input(
        bmspath="{{ dataset_files }}",
        )
    cfg = configtools.expand(cfg, 
                                ['nocuts','zjetcuts','genzjetcuts'],
                                ['None','L1L2L3'])
    configtools.remove_quantities(cfg, [
        'jet1area','jet1l1', 'jet1rc', 'jet1l2','jet1ptraw', 'jet1ptl1',
        'mpf', 'rawmpf', 'rawmet', 'rawmetphi', 'sumet','mettype1vecpt', 'mettype1pt',
        ])
    configtools.add_quantities(cfg, [
        'parton1flavour','parton1pt','parton1y','parton1phi','parton1mass',
        'parton2flavour','parton2pt','parton2y','parton2phi','parton2mass',
        'jet1puidraw',
        ])

##### Set Trigger: ######
# not needed for MC
#    cfg['HltPaths'] = [                                            
         # -- lowest pT unprescaled trigger for the whole of 2017                
         # https://indico.cern.ch/event/682891/contributions/2810364/attachments/1570825/2477991/20171206_CMSWeek_MuonHLTReport_KPLee_v3_1.pdf         'HLT_IsoMu27',                          
#         'HLT_IsoMu27',                          
#     ]                                                       
##### Add Producers: #####
    cfg['Processors'] = ['producer:MuonTriggerMatchingProducer',] + cfg['Processors']
    cfg['Processors'].insert(cfg['Processors'].index('producer:ValidMuonsProducer'), 'producer:MuonCorrectionsProducer',)
    #cfg['Processors'].insert(cfg['Processors'].index('producer:ValidMuonsProducer'), 'producer:PFCandidatesProducer',)
    cfg['Processors'].insert(cfg['Processors'].index('producer:ValidMuonsProducer')+1, 'producer:ZJetDressedMuonsProducer',)
    cfg['Processors'].insert(cfg['Processors'].index('producer:GenZmmProducer'), 'producer:ZJetGenPhotonsProducer',)
    cfg['Processors'].insert(cfg['Processors'].index('producer:GenZmmProducer'), 'producer:ZJetDressedGenMuonsProducer',)

##### Specify input sources for Jets & Muons: #####
    cfg['VertexSummary'] = 'offlinePrimaryVerticesSummary'
    cfg['MaxZJetDressedMuonDeltaR'] = 0.1
    cfg['ValidMuonsInput'] = "corrected"

##### Jets
    cfg['GenJets'] = 'ak4GenJetsNoNu'
    cfg['TaggedJets'] = 'ak4PFJetsCHS'
    cfg['UseObjectJetYCut'] = True
    cfg['Jec'] = os.path.join(configtools.getPath(), '../JECDatabase/textFiles/{{ jec }}/{{ jec }}')
    cfg['JetID'] = 'loose'
    cfg['PUJetID'] = 'medium'
    cfg['DeltaRMatchingRecoJetGenJet'] = 0.2
    cfg['CutLeadingJetPtMin'] = 10.0
    cfg['MinPUJetID'] = -0.2

##### Change selection: (see also http://cms.cern.ch/iCMS/analysisadmin/cadilines?line=SMP-17-002&tp=an&id=1891&ancode=SMP-17-002) #####
    cfg['MuonIso'] = 'loose_{{ year }}'
    cfg['MuonID'] = 'tight'
    cfg['CutMuonPtMin'] = 28.0
    cfg['CutMuonEtaMax'] = 2.4
    cfg['MuonRochesterCorrectionsFile'] = os.path.join(configtools.getPath(),'../Artus/KappaAnalysis/data/rochcorr/RoccoR2017.txt')
    cfg['MuonEnergyCorrection'] = 'rochcorr2017'
    cfg['ZMassRange'] = 20.0

##### MC specific properties: #####
    cfg['NumberGeneratedEvents'] = {{ number_generated_events }} # from geteventsscript (./getGeneratorWeight.py -n NONE /storage/gridka-nrg/.../*.root
    cfg['GeneratorWeight'] = {{ generator_weight }} 
    cfg['CrossSection'] = {{ crosssection }} # https://cms-gen-dev.cern.ch/xsdb/?searchQuery=DAS=DYJetsToLL_M-50_TuneCP5_13TeV-madgraphMLM-pythia8
    cfg['PileupWeightFile'] = os.path.join(configtools.getPath() , 'data/pileup/mc_weights/{{ year }}/{{ dataset }}_{{ skimming_run }}.root')
    return cfg
